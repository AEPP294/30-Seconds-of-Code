header {
  // Use the correct grid area (spans 3 columns).
  grid-area: header;

  display: grid;
  // Add a column on either side to align with the main area's bleed spacing.
  // These side columns will not shrink below the bleed size, but will expand
  // as needed on mobile devices, allowing the header to be centered.
  // The 2 content columns will be either the rest of the space divided by 2
  // on smaller viewports or half the main area's width (including bleed) on
  // desktop, whichever is smaller.
  grid-template-columns:
    minmax(var(--lt-bl-w), 1fr)
    repeat(2, min(calc(var(--lt-c-cw) / 2), calc(50% - var(--lt-bl-w))))
    minmax(var(--lt-bl-w), 1fr);

  padding-block: var(--s-5);

  h1 {
    // Place the logo in the first content column (skip left spacing column).
    grid-column: 2;
    // Align it to the start of the grid row to avoid stretching the clickable area.
    justify-self: start;

    img {
      // Make the logo respond to the user's font size.
      width: 8.75rem;
    }
  }

  nav {
    // Place the nav in the second content column.
    grid-column: 3;
    // Display as flex and align items correctly.
    display: flex;
    align-items: center;
    justify-content: flex-end;
    // Set the color for all links inside the nav.
    color: var(--clr-txt-050);

    :is(a, button) {
      // Remove underline from links.
      --clr-lnk-ul: transparent;
      // Ensure elements display correctly and don't shrink below their content.
      display: inline-block;
      flex-shrink: 0;
      // Make clickable area large enough for coarse pointers (44x44).
      padding: var(--s-3);
      border-radius: var(--br-sm);
      // Apply a transition on hover.
      transition: color var(--anm-d-md) ease;

      svg {
        // Apply a transition on hover.
        transition: scale var(--anm-d-sh) ease;
      }

      @media (hover: hover) {
        &:is(:hover, :focus) {
          // Only apply hover styles on devices that support hover.
          color: var(--clr-txt-200);

          svg {
            // Scale up (to the next font-size) on hover.
            scale: 1.2;
          }
        }

        // TODO: Evaluate this and see if the delay can be a variable. Feels funny.
        &:not(:is(:hover, :focus)) {
          svg {
            transition-delay: 150ms;
          }
        }
      }
    }

    @media (max-width: 25rem) {
      // Respond to user's font size, changing the layout only when needed.
      a {
        // Visually hide links on small viewports, only showing the search button.
        @include visually-hidden;
      }
    }
  }
}
